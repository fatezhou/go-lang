// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc_test.proto

package rpcTest

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReqParam struct {
	A                    int32    `protobuf:"varint,1,opt,name=A,proto3" json:"A,omitempty"`
	B                    int32    `protobuf:"varint,2,opt,name=B,proto3" json:"B,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReqParam) Reset()         { *m = ReqParam{} }
func (m *ReqParam) String() string { return proto.CompactTextString(m) }
func (*ReqParam) ProtoMessage()    {}
func (*ReqParam) Descriptor() ([]byte, []int) {
	return fileDescriptor_e173c35651eae8ee, []int{0}
}

func (m *ReqParam) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReqParam.Unmarshal(m, b)
}
func (m *ReqParam) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReqParam.Marshal(b, m, deterministic)
}
func (m *ReqParam) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReqParam.Merge(m, src)
}
func (m *ReqParam) XXX_Size() int {
	return xxx_messageInfo_ReqParam.Size(m)
}
func (m *ReqParam) XXX_DiscardUnknown() {
	xxx_messageInfo_ReqParam.DiscardUnknown(m)
}

var xxx_messageInfo_ReqParam proto.InternalMessageInfo

func (m *ReqParam) GetA() int32 {
	if m != nil {
		return m.A
	}
	return 0
}

func (m *ReqParam) GetB() int32 {
	if m != nil {
		return m.B
	}
	return 0
}

type RespResult struct {
	Sum                  int32    `protobuf:"varint,1,opt,name=Sum,proto3" json:"Sum,omitempty"`
	Sub                  int32    `protobuf:"varint,2,opt,name=Sub,proto3" json:"Sub,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RespResult) Reset()         { *m = RespResult{} }
func (m *RespResult) String() string { return proto.CompactTextString(m) }
func (*RespResult) ProtoMessage()    {}
func (*RespResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_e173c35651eae8ee, []int{1}
}

func (m *RespResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RespResult.Unmarshal(m, b)
}
func (m *RespResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RespResult.Marshal(b, m, deterministic)
}
func (m *RespResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RespResult.Merge(m, src)
}
func (m *RespResult) XXX_Size() int {
	return xxx_messageInfo_RespResult.Size(m)
}
func (m *RespResult) XXX_DiscardUnknown() {
	xxx_messageInfo_RespResult.DiscardUnknown(m)
}

var xxx_messageInfo_RespResult proto.InternalMessageInfo

func (m *RespResult) GetSum() int32 {
	if m != nil {
		return m.Sum
	}
	return 0
}

func (m *RespResult) GetSub() int32 {
	if m != nil {
		return m.Sub
	}
	return 0
}

func init() {
	proto.RegisterType((*ReqParam)(nil), "rpcTest.ReqParam")
	proto.RegisterType((*RespResult)(nil), "rpcTest.RespResult")
}

func init() { proto.RegisterFile("rpc_test.proto", fileDescriptor_e173c35651eae8ee) }

var fileDescriptor_e173c35651eae8ee = []byte{
	// 157 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x2a, 0x48, 0x8e,
	0x2f, 0x49, 0x2d, 0x2e, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x2a, 0x48, 0x0e,
	0x49, 0x2d, 0x2e, 0x51, 0x52, 0xe3, 0xe2, 0x08, 0x4a, 0x2d, 0x0c, 0x48, 0x2c, 0x4a, 0xcc, 0x15,
	0xe2, 0xe1, 0x62, 0x74, 0x94, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0x62, 0x74, 0x04, 0xf1, 0x9c,
	0x24, 0x98, 0x20, 0x3c, 0x27, 0x25, 0x03, 0x2e, 0xae, 0xa0, 0xd4, 0xe2, 0x82, 0xa0, 0xd4, 0xe2,
	0xd2, 0x9c, 0x12, 0x21, 0x01, 0x2e, 0xe6, 0xe0, 0xd2, 0x5c, 0xa8, 0x5a, 0x10, 0x13, 0x22, 0x92,
	0x04, 0x55, 0x0f, 0x62, 0x1a, 0xd9, 0x72, 0x71, 0x07, 0x05, 0x38, 0xbb, 0x95, 0xe6, 0x25, 0x97,
	0x64, 0xe6, 0xe7, 0x09, 0xe9, 0x71, 0xb1, 0x38, 0x27, 0xe6, 0xe4, 0x08, 0x09, 0xea, 0x41, 0xad,
	0xd6, 0x83, 0xd9, 0x2b, 0x25, 0x8c, 0x24, 0x04, 0xb3, 0x22, 0x89, 0x0d, 0xec, 0x50, 0x63, 0x40,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x70, 0x73, 0xb8, 0x7a, 0xba, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RPCFunctionClient is the client API for RPCFunction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RPCFunctionClient interface {
	Call(ctx context.Context, in *ReqParam, opts ...grpc.CallOption) (*RespResult, error)
}

type rPCFunctionClient struct {
	cc *grpc.ClientConn
}

func NewRPCFunctionClient(cc *grpc.ClientConn) RPCFunctionClient {
	return &rPCFunctionClient{cc}
}

func (c *rPCFunctionClient) Call(ctx context.Context, in *ReqParam, opts ...grpc.CallOption) (*RespResult, error) {
	out := new(RespResult)
	err := c.cc.Invoke(ctx, "/rpcTest.RPCFunction/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RPCFunctionServer is the server API for RPCFunction service.
type RPCFunctionServer interface {
	Call(context.Context, *ReqParam) (*RespResult, error)
}

// UnimplementedRPCFunctionServer can be embedded to have forward compatible implementations.
type UnimplementedRPCFunctionServer struct {
}

func (*UnimplementedRPCFunctionServer) Call(ctx context.Context, req *ReqParam) (*RespResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Call not implemented")
}

func RegisterRPCFunctionServer(s *grpc.Server, srv RPCFunctionServer) {
	s.RegisterService(&_RPCFunction_serviceDesc, srv)
}

func _RPCFunction_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReqParam)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RPCFunctionServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcTest.RPCFunction/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RPCFunctionServer).Call(ctx, req.(*ReqParam))
	}
	return interceptor(ctx, in, info, handler)
}

var _RPCFunction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcTest.RPCFunction",
	HandlerType: (*RPCFunctionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Call",
			Handler:    _RPCFunction_Call_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc_test.proto",
}
